/******************************************************************************************************************************************************
 * XRRig_RespondToEvent
 * --------------------
 *
 * 2022-07-06
 * 
 * Responds to specified events
 * 
 * Roy Davies, Smart Digital Lab, University of Auckland.
 ******************************************************************************************************************************************************/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Public functions
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
public interface IXRRig_RespondToEvent
{
}
// ----------------------------------------------------------------------------------------------------------------------------------------------------------



// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Main class
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
public class XRRig_RespondToEvent : MonoBehaviour, IXRRig_RespondToEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Public variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    [Header("____________________________________________________________________________________________________")]
    [Header("Respond to a specified event.\n____________________________________________________________________________________________________")]
    [Header("INPUTS")]
    [Header("Event to watch for")]
    public XRDeviceEventTypes eventToWatchFor;
    [Header("Action to watch for")]
    public XRDeviceActions actionToWatchFor;
    [Header("SETTINGS")]
    [Header("Event to send")]
    public XRDeviceEventTypes eventToSendOnTrigger; // The event to trigger
    [Header("Action to send")]
    public XRDeviceActions actionToSendOnTrigger; // The action to trigger
    [Header("Text to send")]
    public string textToSend;
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Private variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Set up the variables ready for to go.
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    void Start()
    {
        // Listen for events coming from the XR Controllers and other devices
        if (XRRig.EventQueue != null) XRRig.EventQueue.AddListener(onButtonEvent);
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Play the noise and change the colour
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    private void onButtonEvent(XREvent theEvent)
    {
        if ((theEvent.eventType == eventToWatchFor) && (theEvent.eventAction == actionToWatchFor))
        {
            if (theEvent.eventBool)
            {
                // Create an event to send
                XREvent eventToSend = new XREvent();
                eventToSend.eventType = eventToSendOnTrigger;
                eventToSend.eventAction = actionToSendOnTrigger;
                eventToSend.data = new XRData(textToSend);
                if (XRRig.EventQueue != null) XRRig.EventQueue.Invoke(eventToSend);
            }
        }
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
}
